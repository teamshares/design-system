@layer base {
  /** ************* */
  /** Form elements */
  /** ************* */

  .ts-input {
    @apply border-gray-600 text-gray-900;
    border-radius: 0.375rem;
    border-style: solid;
    border-width: 1px;
    font-size: 1rem;
    height: 2.25rem;
    line-height: 2rem;
    padding: 0 0.75rem;
    position: relative;

    &::placeholder {
      @apply text-gray-600;
    }

    &:focus,
    &:focus-within {
      @apply border-gray-900;
      box-shadow: none;
      outline: 0;

      &::placeholder {
        color: transparent;
      }
    }

    &:disabled {
      @apply bg-gray-100 border-gray-300 text-gray-600;

      &:hover,
      &:active {
        @apply bg-gray-100 text-gray-600;
      }
    }
  }

  .ts-input__help {
    @apply text-gray-700;;
    font-size: 0.6875rem;
    line-height: 2rem;
  }

  .ts-input__label {
    display: inline-block;
    font-size: 0.75rem;
    @apply font-medium;
  }

  .ts-input__leading {
    .ts-input {
      padding-left: 2.25rem;
    }

    span {
      left: 0.75rem;
    }

    &.add-on {
      .ts-input {
        padding-left: 4.75rem;
      }

      span {
        @apply bg-gray-100 border-gray-700;
        border-radius: 1px;
        border-bottom-left-radius: 0.375rem;
        border-style: solid;
        border-top-left-radius: 0.375rem;
        left: 1px;
        padding: 0 0.75rem;
        top: 2rem;
      }
    }

    &.status {
      .ts-input {
        padding-left: 2rem;
      }

      span {
        left: 0.5rem;
        margin-left: 0.375rem;
      }
    }
  }

  .ts-input__trailing {
    .ts-input {
      padding-right: 2.5rem;
    }

    span {
      right: 0.75rem;
    }
  }

  .ts-input__leading,
  .ts-input__trailing {
    display: inline-block;
    position: relative;

    span {
      display: block;
      font-size: 0.8125rem;
      line-height: 2.125rem;
      position: absolute;
    }

    &.icon span {
      top: 2.25rem;

      svg {
        height: 1rem;
      }
    }

    &.status span {
      @apply bg-green-500;
      border-radius: 0.5rem;
      height: 0.5rem;
      top: 2.75rem;
      width: 0.5rem;
    }

    &.text span {
      top: 2.125rem;
    }
  }

  .ts-input__select {
    position: relative;

    select.ts-input {
      appearance: none;
      background: #fff
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' fill='currentColor'%3E%3Cpath fill-rule='evenodd' d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z' clip-rule='evenodd' /%3E%3C/svg%3E")
        right 8px center no-repeat;
      background-size: auto 1rem;
      padding-right: 2rem;
    }

    &.icon {
      .ts-input {
        padding-left: 2.25rem;
      }

      span {
        left: 0.75rem;
        position: absolute;
        top: 2.25rem;

        svg {
          height: 1rem;
        }
      }
    }

    &.status {
      position: relative;

      .ts-input {
        padding-left: 2rem;
      }

      span {
        @apply bg-gray-400;
        border-radius: 0.5rem;
        height: 0.5rem;
        left: 0.75rem;
        position: absolute;
        top: 2.75rem;
        width: 0.5rem;
      }

      select[data-selected='online'] + span {
        @apply bg-green-500;
      }

      select[data-selected='offline'] + span {
        @apply bg-red-500;
      }
    }
  }

  .error {
    .ts-input {
      @apply border-red-600 text-red-700;

      &::placeholder {
        @apply text-red-700;
      }
    }

    &.add-on span {
      @apply bg-red-100 border-red-600 text-red-700;
    }

    &.icon svg {
      @apply fill-red-600;
    }

    &.status span {
      @apply bg-red-600;
    }

    &.text span {
      @apply text-red-700;
    }

    .ts-input__help {
      @apply text-red-700;
    }
  }
}

// SimpleForm + Shoelace error styling

// Add red-600 border for invalid input borders
sl-input[data-user-invalid]::part(base),
sl-select[data-user-invalid]::part(combobox),
sl-checkbox[data-user-invalid]::part(control),
sl-textarea[data-user-invalid]::part(base) {
  @apply border-red-600;
}

// When an invalid input has focus, add an error focus ring
sl-input:focus-within[data-user-invalid]::part(base),
sl-select:focus-within[data-user-invalid]::part(combobox),
sl-textarea:focus-within[data-user-invalid]::part(base) {
  @apply border-red-600;
  @apply ring-4 ring-red-400 ring-offset-0;
}

// sl-checkbox needs outline instead of box-shadow override
sl-checkbox:focus-within[data-user-invalid]::part(control) {
  @apply border-red-600;
  @apply outline-red-600/50;
}


// Applies the same error styles based on 'field_with_errors' class rather than [data-user-invalid]
.field_with_errors {
  // Add red-600 border for input borders
  sl-input::part(base),
  sl-select::part(combobox),
  sl-checkbox::part(control),
  sl-textarea::part(base) {
    @apply border-red-600;
  }

  // When an invalid input has focus, add an error focus ring
  sl-input:focus-within::part(base),
  sl-select:focus-within::part(combobox),
  sl-textarea:focus-within::part(base) {
    @apply border-red-600;
    @apply ring-4 ring-red-400 ring-offset-0;
  }

  // sl-checkbox needs outline instead of box-shadow override
  sl-checkbox:focus-within::part(control) {
    @apply border-red-600;
    @apply outline-red-600/50;
  }

  .error.ts-input__help {
    @apply mt-2;
    @apply ts-body-2;
    @apply text-red-700;

    &:first-letter  {
      text-transform: capitalize;
    }    
  }
}